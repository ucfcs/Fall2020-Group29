[{"/Users/RajPatel/Documents/GitHub/ucf-ai-advising-chatbot/frontend/student_system/src/index.js":"1","/Users/RajPatel/Documents/GitHub/ucf-ai-advising-chatbot/frontend/student_system/src/reportWebVitals.js":"2","/Users/RajPatel/Documents/GitHub/ucf-ai-advising-chatbot/frontend/student_system/src/App.js":"3","/Users/RajPatel/Documents/GitHub/ucf-ai-advising-chatbot/frontend/student_system/src/Components/Result.js":"4"},{"size":500,"mtime":1610884639990,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610884639990,"results":"7","hashOfConfig":"6"},{"size":2671,"mtime":1617275013757,"results":"8","hashOfConfig":"6"},{"size":10270,"mtime":1617290269826,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ii4i1d",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/RajPatel/Documents/GitHub/ucf-ai-advising-chatbot/frontend/student_system/src/index.js",[],["20","21"],"/Users/RajPatel/Documents/GitHub/ucf-ai-advising-chatbot/frontend/student_system/src/reportWebVitals.js",[],"/Users/RajPatel/Documents/GitHub/ucf-ai-advising-chatbot/frontend/student_system/src/App.js",["22","23","24"],"import \"./App.css\";\r\nimport Knugget from \"./Knugget.jpg\";\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport Result from \"./Components/Result\";\r\n\r\nfunction App(props) {\r\n  // const [count, setCount] = useState(0);\r\n\r\n  // Dummy Function to return some data to the chatbot\r\n  const dummy = (value) => {\r\n    return \"Let me see what I can do to help with \" + value;\r\n  };\r\n\r\n  let nextResponse = \"Understandable, have a nice day!\";\r\n  // setCount(34);\r\n  const config = {\r\n    width: \"300px\",\r\n    height: \"400px\",\r\n    floating: true,\r\n    headerTitle: \"KnugBot\",\r\n    placeholder: \"Type response here\",\r\n    botAvatar: Knugget,\r\n    hideUserAvatar: true,\r\n  };\r\n\r\n  const steps = [\r\n    {\r\n      id: \"Greeting\",\r\n      message: \"It me, Knugget! Need some knugvising?\",\r\n      trigger: \"2\",\r\n    },\r\n\r\n    {\r\n      id: \"2\",\r\n      options: [\r\n        { value: 1, label: \"Yes\", trigger: \"More Help\" },\r\n        { value: 2, label: \"No\", trigger: \"4\" },\r\n      ],\r\n    },\r\n    {\r\n      id: \"More Help\",\r\n      message: \"How can I help?\",\r\n      trigger: \"userInput\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      message: nextResponse,\r\n      end: true,\r\n    },\r\n\r\n    {\r\n      id: \"userInput\",\r\n      user: true,\r\n      trigger: \"6\",\r\n    },\r\n    {\r\n      id: \"6\",\r\n      // this will send a string to the dummy function instead of an object.\r\n      // message: ,\r\n      message: ({ previousValue }) => dummy(previousValue),\r\n      trigger: \"7\",\r\n    },\r\n    {\r\n      id: \"7\",\r\n      component: <Result />,\r\n      waitAction: true,\r\n      trigger: \"More Help\",\r\n    },\r\n\r\n    {\r\n      id: \"Even More Help\",\r\n      message: \"Is there something else I can assist you with?\",\r\n      trigger: \"help options\",\r\n    },\r\n\r\n    {\r\n      id: \"help options\",\r\n      // message: \"Heloooo\",\r\n      options: [\r\n        { value: 1, label: \"Yes\", trigger: \"More Help\" },\r\n        { value: 2, label: \"No\", trigger: \"Thank you\" },\r\n      ],\r\n    },\r\n    {\r\n      id: \"Thank you\",\r\n      message: \"Perfect! Glad I could help!\",\r\n      // trigger: \"Feedback\",\r\n      end: true,\r\n    },\r\n  ];\r\n\r\n  const theme = {\r\n    background: \"#fff\",\r\n    fontFamily: \"Arial\",\r\n    headerBgColor: \"#ffd700\",\r\n    headerFontColor: \"#fff\",\r\n    headerFontSize: \"15px\",\r\n    botBubbleColor: \"#eee\",\r\n    botFontColor: \"#000000\",\r\n    userBubbleColor: \"#fff\",\r\n    userFontColor: \"#000000\",\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div>\r\n        <ChatBot recognitionEnable={true} steps={steps} {...config} />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/Users/RajPatel/Documents/GitHub/ucf-ai-advising-chatbot/frontend/student_system/src/Components/Result.js",["25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":3,"column":17,"nodeType":"33","messageId":"34","endLine":3,"endColumn":25},{"ruleId":"31","severity":1,"message":"35","line":3,"column":27,"nodeType":"33","messageId":"34","endLine":3,"endColumn":36},{"ruleId":"31","severity":1,"message":"36","line":3,"column":38,"nodeType":"33","messageId":"34","endLine":3,"endColumn":47},{"ruleId":"31","severity":1,"message":"37","line":4,"column":8,"nodeType":"33","messageId":"34","endLine":4,"endColumn":15},{"ruleId":"31","severity":1,"message":"38","line":5,"column":10,"nodeType":"33","messageId":"34","endLine":5,"endColumn":23},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Component' is defined but never used.","'ChatBot' is defined but never used.","'ThemeProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]